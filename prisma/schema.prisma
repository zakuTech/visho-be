generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  user_id         String      @id @default(uuid()) @db.VarChar(255)
  email           String      @unique @db.VarChar(255)
  password        String      @db.VarChar(255)
  username        String      @db.VarChar(255)
  token           String?     @db.VarChar(255)
  profile_picture String?     @db.VarChar(225)
  bio             String?     @db.VarChar(255)
  following       Followers[] @relation("UserFollowing")
  follower        Followers[]
  post            Posts[]

  @@map("user")
}

model Posts {
  post_id    String     @id @default(uuid()) @db.VarChar(255)
  user_id    String     @default(uuid()) @db.VarChar(255)
  media_url  String     @db.Text
  media_path String     @db.Text
  content    String     @db.Text
  comment    Comments[]
  like       Likes[]
  user       Users      @relation(fields: [user_id], references: [user_id], map: "fk_post_user_id")

  @@index([user_id], map: "idx_post_user_id")
  @@map("post")
}

model Comments {
  comment_id String @id @default(uuid()) @db.VarChar(255)
  user_id    String @default(uuid()) @db.VarChar(255)
  post_id    String @db.VarChar(255)
  content    String @db.Text
  post       Posts  @relation(fields: [post_id], references: [post_id], map: "fk_comment_post_id")

  @@index([post_id], map: "idx_comment_post_id")
  @@map("comment")
}

model Likes {
  like_id String @id @default(uuid()) @db.VarChar(255)
  user_id String @default(uuid()) @db.VarChar(255)
  post_id String @db.VarChar(255)
  post    Posts  @relation(fields: [post_id], references: [post_id], map: "like_post_id_fkey")

  @@index([post_id], map: "idx_like_post_id")
  @@map("like")
}

model Followers {
  follower_id      String @id @default(uuid()) @db.VarChar(255)
  user_id          String @default(uuid()) @db.VarChar(255)
  follower_user_id String @db.VarChar(255)
  follower         Users  @relation("UserFollowing", fields: [follower_user_id], references: [user_id], map: "followers_follower_user_id_fkey")
  user             Users  @relation(fields: [user_id], references: [user_id], map: "follower_user_id_fkey")

  @@index([follower_user_id], map: "idx_followers_follower_id")
  @@index([user_id], map: "idx_follower_user_id")
  @@map("follower")
}
